
NAME = libft.a
CC = cc
FLAGS = -Wall -Wextra -Werror


SRC = ft_isalnum.c\
	ft_isalpha.c\
	ft_isascii.c\
	ft_isdigit.c\
	ft_isprint.c\
	ft_tolower.c\
	ft_toupper.c\
	ft_bzero.c\
	ft_memchr.c\
	ft_memcmp.c\
	ft_memcpy.c\
	ft_memmove.c\
	ft_memset.c\
	ft_strchr.c\
	ft_strlcat.c\
	ft_strlcpy.c\
	ft_strlen.c \
	ft_strncmp.c\
	ft_strnstr.c\
	ft_strrchr.c\
	ft_atoi.c\
	ft_calloc.c\
	ft_strdup.c\
	ft_substr.c\
	ft_strjoin.c\
	ft_strtrim.c\
	ft_itoa.c\
	ft_putchar_fd.c\
	ft_putstr_fd.c\
	ft_putnbr_fd.c\
	ft_putendl_fd.c\
	ft_strmapi.c\
	ft_striteri.c\
	ft_split.c

SRC_B = ft_lstnew.c\
	ft_lstadd_front.c\
	ft_lstsize.c\
	ft_lstlast.c\
	ft_lstadd_back.c\
	ft_lstdelone.c\
	ft_lstclear.c\
	ft_lstiter.c\
	ft_lstmap.c

HEADER = libft.h
MAIN_SRC = main.c

OBJS = $(SRC:.c=.o)
OBJS_B = $(SRC_B:.c=.o)
MAIN_OBJS = $(MAIN_SRC:.c=.o)

all: $(NAME)

#compile lib
$(NAME): $(OBJS)
	ar rcs $(NAME) $(OBJS)

#compile objs
%.o : %.c
	$(CC) $(FLAGS) -I. -c $< -o $@

#main: all $(MAIN_OBJS)
#	$(CC) $(FLAGS) -I. $(MAIN_OBJS) -o main $(NAME)

#test: main
#	./main

clean:
	rm -f $(OBJS) $(MAIN_OBJS)
	
fclean: clean
	rm -f $(NAME)
	
re: fclean all

bonus: $(NAME) $(OBJS_B)
		ar -rcs $(NAME) $(OBJS_B)
